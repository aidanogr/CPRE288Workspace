/*
 * movement.c
 *
 *  Created on: Feb 4, 2025
 *      Author: ahogrady
 */


#include "open_interface.h"
#include <stdint.h>
#include "Timer.h"


double move_forward(oi_t* sensor_data, double distance_mm) {
    double sum = 0; // distance member in oi_t struct is type double
    double initial_distance = sensor_data->distance;
    oi_setWheels(500,500); //move forward at full speed

    while (sum < distance_mm) {
    oi_update(sensor_data);
    sum += sensor_data -> distance - initial_distance; // use -> notation since pointer
    }
    oi_setWheels(0,0); //stop
    return sum;
}

void turn_left(oi_t* sensor_data, double degrees){
    double sum = 0;
    double initial_angle = sensor_data->angle;

    //take 1: using math:
    //distance between wheels: 235mm
    //radius: 117.5
    //we want to travel (degrees * (pi/180)) radians
    //if 1 radii = 117.5 and linear vel = 1000
    //time = (angle * pi * 117.5)/(180*500)


    uint8_t right_or_left = 1;    //right = -1 left = 1
    if(degrees < 0) {
        degrees*=-1;
        right_or_left *= -1;
    }

    int totalTime = (int) ((degrees * 3.1415926535897 * 117.5)/(180.0*1000.0) * 1000.0);
    unsigned int initial_time_millis = timer_getMillis();


    oi_setWheels(500 * right_or_left, -500 * right_or_left);
    while(timer_getMillis()-initial_time_millis < totalTime) {}
    oi_setWheels(0, 0);

}
void turn_left(oi_t* sensor_data, double degrees);



